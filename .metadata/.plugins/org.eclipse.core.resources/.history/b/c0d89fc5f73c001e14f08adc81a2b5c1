package org.program.service;

import java.io.IOException;
import java.util.Base64;
import java.util.List;

import org.program.entity.Admin;
import org.program.entity.NewCar;
import org.program.repository.AdminRepository;
import org.program.repository.NewCarRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;

@Service
public class AdminService {
	
	@Autowired
	private AdminRepository adminRepository;
	
	@Autowired
	private NewCarRepository carRepository;
	
	public int adminLoginVerification(Admin admin) {
		Admin admin1 = adminRepository.findByUsernameAndPassword(admin.getUsername(),admin.getPassword());
		if(admin1 == null) {
			return 500;
		}
		return 200;
	}
	
	public void addNewCarService(
			String modelName,
			String modelBrand,
			String modelType,
			String price,
			String mileage,
			String fuelType,
			String transmission,
			String modelYear,
			String description,
			MultipartFile carImage 
			) throws IOException
	{
		NewCar car = new NewCar();
		car.setModelName(modelName);
		car.setModelBrand(modelBrand);
		car.setModelType(modelType);
		car.setPrice(price);
		car.setMileage(mileage);
		car.setFuelType(fuelType);
		car.setTransmission(transmission);
		car.setModelYear(modelYear);
		car.setDescription(description);
		car.setCarImage(carImage.getBytes());
		carRepository.save(car);
		
	}
	
	public List<NewCar> searchByModelNameService( String modelName) {
		 return carRepository.findByModelName(modelName);
		
		
		
		
	}
	public List<NewCar> searchByModelTypeService( String modelType) {
		return carRepository.findByModelType(modelType);
		
	}
	public List<NewCar> searchByBrandNameService(String modelBrand) {
		return carRepository.findByModelBrand(modelBrand);
		
	}
	
	public List<NewCar> searchByModelYearService( String modelYear) {
		return carRepository.findByModelYear(modelYear);
		
	}
}
